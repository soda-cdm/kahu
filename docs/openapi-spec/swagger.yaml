swagger: '2.0'
info:
  title: KAHU APIs
  version: v1beta1
  description: APIs supported by KAHU for backup/restore solution for containerized applications. 
paths:
  /apis/kahu.io/v1beta1/backuplocations:
    get:
      description: list objects of kind BackupLocation
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: listKahuIoV1beta1BackupLocation
      parameters:
        - uniqueItems: true
          type: boolean
          description: allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
          name: allowWatchBookmarks
          in: query
        - uniqueItems: true
          type: string
          description: |-
            The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

            This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
          name: continue
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their fields. Defaults to everything.
          name: fieldSelector
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          name: labelSelector
          in: query
        - uniqueItems: true
          type: integer
          description: |-
            limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

            The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
          name: limit
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersionMatch
          in: query
        - uniqueItems: true
          type: integer
          description: Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
          name: timeoutSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
          name: watch
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocationList'
        '401':
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: BackupLocation
        version: v1beta1
    post:
      description: create a BackupLocation
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: createKahuIoV1beta1BackupLocation
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: string
          description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          name: fieldManager
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
        '401':
          description: Unauthorized
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: BackupLocation
        version: v1beta1
    delete:
      description: delete collection of BackupLocation
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: deleteKahuIoV1beta1CollectionBackupLocation
      parameters:
        - uniqueItems: true
          type: boolean
          description: allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
          name: allowWatchBookmarks
          in: query
        - uniqueItems: true
          type: string
          description: |-
            The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

            This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
          name: continue
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their fields. Defaults to everything.
          name: fieldSelector
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          name: labelSelector
          in: query
        - uniqueItems: true
          type: integer
          description: |-
            limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

            The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
          name: limit
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersionMatch
          in: query
        - uniqueItems: true
          type: integer
          description: Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
          name: timeoutSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
          name: watch
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2'
        '401':
          description: Unauthorized
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: BackupLocation
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/backuplocations/{name}:
    get:
      description: read the specified BackupLocation
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: readKahuIoV1beta1BackupLocation
      parameters:
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
        '401':
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: BackupLocation
        version: v1beta1
    put:
      description: replace the specified BackupLocation
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: replaceKahuIoV1beta1BackupLocation
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: string
          description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          name: fieldManager
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
        '401':
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: BackupLocation
        version: v1beta1
    delete:
      description: delete a BackupLocation
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: deleteKahuIoV1beta1BackupLocation
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: integer
          description: The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
          name: gracePeriodSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object''s finalizers list. Either this field or PropagationPolicy may be set, but not both.'
          name: orphanDependents
          in: query
        - uniqueItems: true
          type: string
          description: 'Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: ''Orphan'' - orphan the dependents; ''Background'' - allow the garbage collector to delete the dependents in the background; ''Foreground'' - a cascading policy that deletes all dependents in the foreground.'
          name: propagationPolicy
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2'
        '401':
          description: Unauthorized
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: BackupLocation
        version: v1beta1
    patch:
      description: partially update the specified BackupLocation
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: patchKahuIoV1beta1BackupLocation
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: string
          description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          name: fieldManager
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
        '401':
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: BackupLocation
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the BackupLocation
        name: name
        in: path
        required: true
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/backups:
    get:
      description: list objects of kind Backup
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: listKahuIoV1beta1Backup
      parameters:
        - uniqueItems: true
          type: boolean
          description: allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
          name: allowWatchBookmarks
          in: query
        - uniqueItems: true
          type: string
          description: |-
            The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

            This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
          name: continue
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their fields. Defaults to everything.
          name: fieldSelector
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          name: labelSelector
          in: query
        - uniqueItems: true
          type: integer
          description: |-
            limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

            The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
          name: limit
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersionMatch
          in: query
        - uniqueItems: true
          type: integer
          description: Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
          name: timeoutSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
          name: watch
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.BackupList'
        '401':
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Backup
        version: v1beta1
    post:
      description: create a Backup
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: createKahuIoV1beta1Backup
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: string
          description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          name: fieldManager
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        '401':
          description: Unauthorized
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Backup
        version: v1beta1
    delete:
      description: delete collection of Backup
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: deleteKahuIoV1beta1CollectionBackup
      parameters:
        - uniqueItems: true
          type: boolean
          description: allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
          name: allowWatchBookmarks
          in: query
        - uniqueItems: true
          type: string
          description: |-
            The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

            This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
          name: continue
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their fields. Defaults to everything.
          name: fieldSelector
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          name: labelSelector
          in: query
        - uniqueItems: true
          type: integer
          description: |-
            limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

            The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
          name: limit
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersionMatch
          in: query
        - uniqueItems: true
          type: integer
          description: Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
          name: timeoutSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
          name: watch
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2'
        '401':
          description: Unauthorized
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Backup
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/backups/{name}:
    get:
      description: read the specified Backup
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: readKahuIoV1beta1Backup
      parameters:
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        '401':
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Backup
        version: v1beta1
    put:
      description: replace the specified Backup
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: replaceKahuIoV1beta1Backup
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: string
          description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          name: fieldManager
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        '401':
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Backup
        version: v1beta1
    delete:
      description: delete a Backup
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: deleteKahuIoV1beta1Backup
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: integer
          description: The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
          name: gracePeriodSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object''s finalizers list. Either this field or PropagationPolicy may be set, but not both.'
          name: orphanDependents
          in: query
        - uniqueItems: true
          type: string
          description: 'Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: ''Orphan'' - orphan the dependents; ''Background'' - allow the garbage collector to delete the dependents in the background; ''Foreground'' - a cascading policy that deletes all dependents in the foreground.'
          name: propagationPolicy
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2'
        '401':
          description: Unauthorized
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Backup
        version: v1beta1
    patch:
      description: partially update the specified Backup
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: patchKahuIoV1beta1Backup
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: string
          description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          name: fieldManager
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        '401':
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Backup
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Backup
        name: name
        in: path
        required: true
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/backups/{name}/status:
    get:
      description: read status of the specified Backup
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: readKahuIoV1beta1BackupStatus
      parameters:
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Backup'
        '401':
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Backup
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Backup
        name: name
        in: path
        required: true
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/providers:
    get:
      description: list objects of kind Provider
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: listKahuIoV1beta1Provider
      parameters:
        - uniqueItems: true
          type: boolean
          description: allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
          name: allowWatchBookmarks
          in: query
        - uniqueItems: true
          type: string
          description: |-
            The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

            This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
          name: continue
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their fields. Defaults to everything.
          name: fieldSelector
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          name: labelSelector
          in: query
        - uniqueItems: true
          type: integer
          description: |-
            limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

            The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
          name: limit
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersionMatch
          in: query
        - uniqueItems: true
          type: integer
          description: Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
          name: timeoutSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
          name: watch
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.ProviderList'
        '401':
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Provider
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/providers/{name}:
    get:
      description: read the specified Provider
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: readKahuIoV1beta1Provider
      parameters:
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Provider'
        '401':
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Provider
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Provider
        name: name
        in: path
        required: true
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/providers/{name}/status:
    get:
      description: read status of the specified Provider
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: readKahuIoV1beta1ProviderStatus
      parameters:
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Provider'
        '401':
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Provider
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Provider
        name: name
        in: path
        required: true
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/restores:
    get:
      description: list objects of kind Restore
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: listKahuIoV1beta1Restore
      parameters:
        - uniqueItems: true
          type: boolean
          description: allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
          name: allowWatchBookmarks
          in: query
        - uniqueItems: true
          type: string
          description: |-
            The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

            This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
          name: continue
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their fields. Defaults to everything.
          name: fieldSelector
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          name: labelSelector
          in: query
        - uniqueItems: true
          type: integer
          description: |-
            limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

            The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
          name: limit
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersionMatch
          in: query
        - uniqueItems: true
          type: integer
          description: Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
          name: timeoutSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
          name: watch
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.RestoreList'
        '401':
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Restore
        version: v1beta1
    post:
      description: create a Restore
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: createKahuIoV1beta1Restore
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: string
          description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          name: fieldManager
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        '401':
          description: Unauthorized
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Restore
        version: v1beta1
    delete:
      description: delete collection of Restore
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: deleteKahuIoV1beta1CollectionRestore
      parameters:
        - uniqueItems: true
          type: boolean
          description: allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
          name: allowWatchBookmarks
          in: query
        - uniqueItems: true
          type: string
          description: |-
            The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

            This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
          name: continue
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their fields. Defaults to everything.
          name: fieldSelector
          in: query
        - uniqueItems: true
          type: string
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          name: labelSelector
          in: query
        - uniqueItems: true
          type: integer
          description: |-
            limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

            The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
          name: limit
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
        - uniqueItems: true
          type: string
          description: |-
            resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersionMatch
          in: query
        - uniqueItems: true
          type: integer
          description: Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
          name: timeoutSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
          name: watch
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2'
        '401':
          description: Unauthorized
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Restore
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/restores/{name}:
    get:
      description: read the specified Restore
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: readKahuIoV1beta1Restore
      parameters:
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        '401':
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Restore
        version: v1beta1
    put:
      description: replace the specified Restore
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: replaceKahuIoV1beta1Restore
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: string
          description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          name: fieldManager
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        '401':
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Restore
        version: v1beta1
    delete:
      description: delete a Restore
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: deleteKahuIoV1beta1Restore
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: integer
          description: The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
          name: gracePeriodSeconds
          in: query
        - uniqueItems: true
          type: boolean
          description: 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object''s finalizers list. Either this field or PropagationPolicy may be set, but not both.'
          name: orphanDependents
          in: query
        - uniqueItems: true
          type: string
          description: 'Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: ''Orphan'' - orphan the dependents; ''Background'' - allow the garbage collector to delete the dependents in the background; ''Foreground'' - a cascading policy that deletes all dependents in the foreground.'
          name: propagationPolicy
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2'
        '401':
          description: Unauthorized
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Restore
        version: v1beta1
    patch:
      description: partially update the specified Restore
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: patchKahuIoV1beta1Restore
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - uniqueItems: true
          type: string
          description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
          name: fieldManager
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        '401':
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Restore
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Restore
        name: name
        in: path
        required: true
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
  /apis/kahu.io/v1beta1/restores/{name}/status:
    get:
      description: read status of the specified Restore
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - kahuIo_v1beta1
      operationId: readKahuIoV1beta1RestoreStatus
      parameters:
        - uniqueItems: true
          type: string
          description: |-
            resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.

            Defaults to unset
          name: resourceVersion
          in: query
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/io.kahu.v1beta1.Restore'
        '401':
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: kahu.io
        kind: Restore
        version: v1beta1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Restore
        name: name
        in: path
        required: true
      - uniqueItems: true
        type: string
        description: If 'true', then the output is pretty printed.
        name: pretty
        in: query
definitions:
  io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1:
    description: |-
      FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

      Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

      The exact format is defined in sigs.k8s.io/structured-merge-diff
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause:
    description: StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
    type: object
    properties:
      field:
        description: |-
          The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

          Examples:
            "name" - the field "name" on the current resource
            "items[0].name" - the field "name" on the first array entry in "items"
        type: string
      message:
        description: A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
        type: string
      reason:
        description: A machine-readable description of the cause of the error. If this value is empty there is no information available.
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:
    description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
    type: object
    properties:
      apiVersion:
        description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
        type: string
      fieldsV1:
        description: FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1'
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
        type: string
      subresource:
        description: Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
        type: string
      time:
        description: Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
  io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference_v2:
    description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
    type: object
    required:
      - apiVersion
      - kind
      - name
      - uid
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
        type: boolean
      controller:
        description: If true, this reference points to the managing controller.
        type: boolean
      kind:
        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
        type: string
      uid:
        description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
        type: string
    x-kubernetes-map-type: atomic
  io.k8s.apimachinery.pkg.apis.meta.v1.Time:
    description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
    type: string
    format: date-time
  io.k8s.apimachinery.pkg.apis.meta.v1.Patch:
    description: Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2:
    description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
    type: object
    properties:
      annotations:
        description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
        type: object
        additionalProperties:
          type: string
      clusterName:
        description: |-
          Deprecated: ClusterName is a legacy field that was always cleared by the system and never used; it will be removed completely in 1.25.

          The name in the go struct is changed to help clients detect accidental use.
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      deletionGracePeriodSeconds:
        description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
        type: integer
        format: int64
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      finalizers:
        description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
        type: array
        items:
          type: string
        x-kubernetes-patch-strategy: merge
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
        type: string
      generation:
        description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
        type: integer
        format: int64
      labels:
        description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
        type: object
        additionalProperties:
          type: string
      managedFields:
        description: ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry'
      name:
        description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

          Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
        type: string
      ownerReferences:
        description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference_v2'
        x-kubernetes-patch-merge-key: uid
        x-kubernetes-patch-strategy: merge
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
        type: string
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

          Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta:
    description: ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    type: object
    properties:
      continue:
        description: continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
        type: string
      remainingItemCount:
        description: remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
        type: integer
        format: int64
      resourceVersion:
        description: 'String that identifies the server''s internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
        type: string
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails_v2:
    description: StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
    type: object
    properties:
      causes:
        description: The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause'
      group:
        description: The group attribute of the resource associated with the status StatusReason.
        type: string
      kind:
        description: 'The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
        type: string
      retryAfterSeconds:
        description: If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
        type: integer
        format: int32
      uid:
        description: 'UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2:
    description: Status is a return value for calls that don't return other objects.
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      code:
        description: Suggested HTTP return code for this status, 0 if not set.
        type: integer
        format: int32
      details:
        description: Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails_v2'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      message:
        description: A human-readable description of the status of this operation.
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
      reason:
        description: A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
        type: string
      status:
        description: 'Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions:
    description: Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
    type: object
    properties:
      resourceVersion:
        description: Specifies the target ResourceVersion
        type: string
      uid:
        description: Specifies the target UID.
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2:
    description: DeleteOptions may be provided when deleting an API object.
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      dryRun:
        description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
        type: array
        items:
          type: string
      gracePeriodSeconds:
        description: The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
        type: integer
        format: int64
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      orphanDependents:
        description: 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object''s finalizers list. Either this field or PropagationPolicy may be set, but not both.'
        type: boolean
      preconditions:
        description: Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions'
      propagationPolicy:
        description: 'Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: ''Orphan'' - orphan the dependents; ''Background'' - allow the garbage collector to delete the dependents in the background; ''Foreground'' - a cascading policy that deletes all dependents in the foreground.'
        type: string    
  io.kahu.v1beta1.Backup:
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2'
      spec:
        type: object
        required:
          - metadataLocation
        properties:
          enableMetadataBackup:
            description: EnableMetadataBackup tells whether metadata backup should be taken or not
            type: boolean
          enableVolumeBackup:
            description: EnableMetadataBackup tells whether volumes(PV) backup should be taken or not
            type: boolean
          excludeNamespaces:
            description: ExcludeNamespaces is a list of all namespaces excluded for backup
            type: array
            items:
              type: string
          excludeResources:
            description: ExcludeResources is a list of all resources excluded for backup
            type: array
            items:
              type: object
              required:
                - kind
              properties:
                isRegex:
                  description: IsRegex indicates if Name is regular expression
                  type: boolean
                kind:
                  description: Kind of the resource
                  type: string
                name:
                  description: Name of the resource The name can have empty, * in regular expression or valid resource name
                  type: string
          hook:
            description: Hook is pre or post operations which should be executed during backup
            type: object
            properties:
              resources:
                type: array
                items:
                  description: ResourceHookSpec is hook which should be executed at different phase of backup
                  type: object
                  required:
                    - name
                  properties:
                    continueHookIfContainerNotFound:
                      description: ContinueHookIfContainerNotFound is used to proceed flag continue hooks when user specified container is not present in the Pod. If empty, container execution fail for missing container
                      type: boolean
                    excludeNamespaces:
                      description: ExcludeNamespaces is a list of all namespaces excluded for hook
                      type: array
                      items:
                        type: string
                    excludeResources:
                      description: ExcludeResources is a list of all resources excluded for backup
                      type: array
                      items:
                        type: object
                        required:
                          - kind
                        properties:
                          isRegex:
                            description: IsRegex indicates if Name is regular expression
                            type: boolean
                          kind:
                            description: Kind of the resource
                            type: string
                          name:
                            description: Name of the resource The name can have empty, * in regular expression or valid resource name
                            type: string
                    includeNamespaces:
                      description: IncludeNamespaces is a list of all namespaces included for hook. If empty, all namespaces are included
                      type: array
                      items:
                        type: string
                    includeResources:
                      description: IncludeResources is a list of all resources included for hook. If empty, all resources are included
                      type: array
                      items:
                        type: object
                        required:
                          - kind
                        properties:
                          isRegex:
                            description: IsRegex indicates if Name is regular expression
                            type: boolean
                          kind:
                            description: Kind of the resource
                            type: string
                          name:
                            description: Name of the resource The name can have empty, * in regular expression or valid resource name
                            type: string
                    labelSelector:
                      description: Label is used to filter the resources
                      type: object
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          type: array
                          items:
                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                            type: object
                            required:
                              - key
                              - operator
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                type: array
                                items:
                                  type: string
                        matchLabels:
                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                          additionalProperties:
                            type: string
                    name:
                      type: string
                    post:
                      description: PostHooks is a list of ResourceHooks to execute after storing the item in the backup. These are executed after all "additional items" from item actions are processed.
                      type: array
                      items:
                        description: ResourceHook defines a hook for a resource.
                        type: object
                        required:
                          - exec
                        properties:
                          exec:
                            description: Exec defines an exec hook.
                            type: object
                            required:
                              - command
                            properties:
                              command:
                                description: Command is the command and arguments to execute.
                                type: array
                                minItems: 1
                                items:
                                  type: string
                              container:
                                description: Container is the container in the pod where the command should be executed. If not specified, the pod's first container is used.
                                type: string
                              onError:
                                description: OnError specifies how to behave if it encounters an error executing this hook.
                                type: string
                                enum:
                                  - Continue
                                  - Fail
                              timeout:
                                description: Timeout defines the maximum amount of time service should wait for the hook to complete before considering the execution a failure.
                                type: string
                    pre:
                      description: PreHooks is a list of ResourceHooks to execute prior to storing the item in the backup. These are executed before any "additional items" from item actions are processed.
                      type: array
                      items:
                        description: ResourceHook defines a hook for a resource.
                        type: object
                        required:
                          - exec
                        properties:
                          exec:
                            description: Exec defines an exec hook.
                            type: object
                            required:
                              - command
                            properties:
                              command:
                                description: Command is the command and arguments to execute.
                                type: array
                                minItems: 1
                                items:
                                  type: string
                              container:
                                description: Container is the container in the pod where the command should be executed. If not specified, the pod's first container is used.
                                type: string
                              onError:
                                description: OnError specifies how to behave if it encounters an error executing this hook.
                                type: string
                                enum:
                                  - Continue
                                  - Fail
                              timeout:
                                description: Timeout defines the maximum amount of time service should wait for the hook to complete before considering the execution a failure.
                                type: string
          includeNamespaces:
            description: IncludeNamespaces is a list of all namespaces included for backup. If empty, all namespaces are included
            type: array
            items:
              type: string
          includeResources:
            description: IncludeResources is a list of all resources included for backup. If empty, all resources are included
            type: array
            items:
              type: object
              required:
                - kind
              properties:
                isRegex:
                  description: IsRegex indicates if Name is regular expression
                  type: boolean
                kind:
                  description: Kind of the resource
                  type: string
                name:
                  description: Name of the resource The name can have empty, * in regular expression or valid resource name
                  type: string
          label:
            description: Label is used to filter the resources
            type: object
            properties:
              matchExpressions:
                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                type: array
                items:
                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                  type: object
                  required:
                    - key
                    - operator
                  properties:
                    key:
                      description: key is the label key that the selector applies to.
                      type: string
                    operator:
                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                      type: string
                    values:
                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                      type: array
                      items:
                        type: string
              matchLabels:
                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                type: object
                additionalProperties:
                  type: string
          metadataLocation:
            description: MetadataLocation is location where backup is going to be stored
            type: string
          reclaimPolicy:
            description: ReclaimPolicy tells about reclamation of the backup. It can be either delete or retain
            type: object
            properties:
              reclaimPolicyDelete:
                type: string
              reclaimPolicyRetain:
                type: string
          volumeBackupLocations:
            description: VolumeBackupLocations is a list of all volume providers included for backup. If empty, all providers are included
            type: array
            items:
              type: string
      status:
        type: object
        properties:
          completionTimestamp:
            description: CompletionTimestamp is defines time when backup completed
            format: date-time
          lastBackup:
            description: LastBackup defines the last backup time
            type: string
            format: date-time
          resources:
            description: Conditions tells the current state of a resource that is backing up
            type: array
            items:
              description: BackupResource indicates the current state of a resource that is backing up
              type: object
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                namespace:
                  description: Namespace of the backup resource
                  type: string
                resourceName:
                  description: ResourceName is a one of the item of backup that is backing up
                  type: string
                status:
                  description: Status is a state of the resource
                  type: string
          stage:
            description: Stage is the current phase of the backup
            type: string
            enum:
              - Initial
              - PreHook
              - Resources
              - Volumes
              - PostHook
              - Finished
          startTimestamp:
            description: StartTimestamp is defines time when backup started
            format: date-time
          state:
            description: State is the current state in backup
            type: string
            enum:
              - New
              - Validating
              - Processing
              - Completed
              - Deleting
              - Failed
          validationErrors:
            description: ValidationErrors is a list of erros which are founded during validation of backup spec
            type: array
            items:
              type: string
    x-kubernetes-group-version-kind:
      - group: kahu.io
        kind: Backup
        version: v1beta1
  io.kahu.v1beta1.BackupList:
    description: BackupList is a list of Backup
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of backups. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.kahu.v1beta1.Backup'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: kahu.io
        kind: BackupList
        version: v1beta1
  io.kahu.v1beta1.BackupLocation:
    description: BackupLocation is the Schema for the backuplocations API
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2'
      spec:
        description: BackupLocationSpec defines the desired state of BackupLocation
        type: object
        required:
          - providerName
        properties:
          config:
            description: Config is a dictonary which may contains specific details, like secret key, password etc
            type: object
            additionalProperties:
              type: string
          providerName:
            description: ProviderName is a 3rd party driver which inernally connect to respective storage
            type: string
    x-kubernetes-group-version-kind:
      - group: kahu.io
        kind: BackupLocation
        version: v1beta1
  io.kahu.v1beta1.BackupLocationList:
    description: BackupLocationList is a list of BackupLocation
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of backuplocations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.kahu.v1beta1.BackupLocation'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: kahu.io
        kind: BackupLocationList
        version: v1beta1
  io.kahu.v1beta1.Provider:
    description: Provider is the Schema for the Provider
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2'
      spec:
        description: ProviderSpec defines the specification of provider CRD
        type: object
        required:
          - type
          - version
        properties:
          capabilities:
            description: Capabilities is the optional set of provider capabilities
            type: object
            additionalProperties:
              type: boolean
          manifest:
            description: Manifest is the optional set of provider specific configurations
            type: object
            additionalProperties:
              type: string
          type:
            description: Type is type of the provider getting registered
            type: string
            enum:
              - MetadataProvider
              - VolumeProvider
          version:
            description: Version is version of the provider getting registered
            type: string
      status:
        description: ProviderStatus defines the observed state of Provider
        type: object
        properties:
          state:
            description: ProviderState is the availability state of Provider.
            type: string
            enum:
              - Available
              - Unavailable
    x-kubernetes-group-version-kind:
      - group: kahu.io
        kind: Provider
        version: v1beta1
  io.kahu.v1beta1.ProviderList:
    description: ProviderList is a list of Provider
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of providers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.kahu.v1beta1.Provider'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: kahu.io
        kind: ProviderList
        version: v1beta1
  io.kahu.v1beta1.Restore:
    description: Restore is the Schema for the restores API
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2'
      spec:
        description: RestoreSpec defines the desired state of Restore
        type: object
        required:
          - backupName
        properties:
          backupName:
            description: BackupName is backup CR name specified during backup
            type: string
          excludeNamespaces:
            description: ExcludeNamespaces are set of namespace name should not get considered for restore
            type: array
            items:
              type: string
          excludeResources:
            description: ExcludeResources are set of kubernetes resource name should not get considered for restore
            type: array
            items:
              type: object
              required:
                - kind
              properties:
                isRegex:
                  description: IsRegex indicates if Name is regular expression
                  type: boolean
                kind:
                  description: Kind of the resource
                  type: string
                name:
                  description: Name of the resource The name can have empty, * in regular expression or valid resource name
                  type: string
          hook:
            description: Hooks represent custom behaviors that should be executed during or post restore.
            type: object
            properties:
              resources:
                type: array
                items:
                  description: RestoreResourceHookSpec is hook which should be executed at different phase of backup
                  type: object
                  required:
                    - name
                  properties:
                    excludeNamespaces:
                      description: ExcludeNamespaces is a list of all namespaces excluded for hook
                      type: array
                      items:
                        type: string
                    excludeResources:
                      description: ExcludeResources is a list of all resources excluded for backup
                      type: array
                      items:
                        type: object
                        required:
                          - kind
                        properties:
                          isRegex:
                            description: IsRegex indicates if Name is regular expression
                            type: boolean
                          kind:
                            description: Kind of the resource
                            type: string
                          name:
                            description: Name of the resource The name can have empty, * in regular expression or valid resource name
                            type: string
                    includeNamespaces:
                      description: IncludeNamespaces is a list of all namespaces included for hook. If empty, all namespaces are included
                      type: array
                      items:
                        type: string
                    includeResources:
                      description: IncludeResources is a list of all resources included for hook. If empty, all resources are included
                      type: array
                      items:
                        type: object
                        required:
                          - kind
                        properties:
                          isRegex:
                            description: IsRegex indicates if Name is regular expression
                            type: boolean
                          kind:
                            description: Kind of the resource
                            type: string
                          name:
                            description: Name of the resource The name can have empty, * in regular expression or valid resource name
                            type: string
                    labelSelector:
                      description: Label is used to filter the resources
                      type: object
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          type: array
                          items:
                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                            type: object
                            required:
                              - key
                              - operator
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                type: array
                                items:
                                  type: string
                        matchLabels:
                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                          additionalProperties:
                            type: string
                    name:
                      type: string
                    post:
                      description: PostHooks is a list of ResourceHooks to execute after storing the item in the backup. These are executed after all "additional items" from item actions are processed.
                      type: array
                      items:
                        description: RestoreResourceHook defines a hook for a resource.
                        type: object
                        properties:
                          exec:
                            description: Exec defines an exec hook.
                            type: object
                            required:
                              - command
                            properties:
                              command:
                                description: Command is the command and arguments to execute.
                                type: array
                                minItems: 1
                                items:
                                  type: string
                              container:
                                description: Container is the container in the pod where the command should be executed. If not specified, the pod's first container is used.
                                type: string
                              onError:
                                description: OnError specifies how to behave if it encounters an error executing this hook.
                                type: string
                                enum:
                                  - Continue
                                  - Fail
                              timeout:
                                description: Timeout defines the maximum amount of time service should wait for the hook to complete before considering the execution a failure.
                                type: string
                              waitTimeout:
                                description: WaitTimeout defines the maximum amount of time Velero should wait for the container to be Ready before attempting to run the command.
                                type: string
                          init:
                            description: Init defines an init restore hook.
                            type: object
                            properties:
                              initContainers:
                                description: InitContainers is list of init containers to be added to a pod during its restore.
                                type: array
                                items:
                                  description: A single application container that you want to run within a pod.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string
                                    command:
                                      description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      type: array
                                      items:
                                        type: string
                                    env:
                                      description: List of environment variables to set in the container. Cannot be updated.
                                      type: array
                                      items:
                                        description: EnvVar represents an environment variable present in a Container.
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                                            type: object
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the ConfigMap or its key must be defined
                                                    type: boolean
                                              fieldRef:
                                                description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                              secretKeyRef:
                                                description: Selects a key of a secret in the pod's namespace
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key of the secret to select from.  Must be a valid secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the Secret or its key must be defined
                                                    type: boolean
                                    envFrom:
                                      description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                                      type: array
                                      items:
                                        description: EnvFromSource represents the source of a set of ConfigMaps
                                        type: object
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap must be defined
                                                type: boolean
                                          prefix:
                                            description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret must be defined
                                                type: boolean
                                    image:
                                      description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    lifecycle:
                                      description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                                      type: object
                                      properties:
                                        postStart:
                                          description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          type: object
                                          properties:
                                            exec:
                                              description: One and only one of the following should be specified. Exec specifies the action to take.
                                              type: object
                                              properties:
                                                command:
                                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGet specifies the http request to perform.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                        preStop:
                                          description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                          type: object
                                          properties:
                                            exec:
                                              description: One and only one of the following should be specified. Exec specifies the action to take.
                                              type: object
                                              properties:
                                                command:
                                                  description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  type: array
                                                  items:
                                                    type: string
                                            httpGet:
                                              description: HTTPGet specifies the http request to perform.
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  type: array
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        description: The header field name
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: Scheme to use for connecting to the host. Defaults to HTTP.
                                                  type: string
                                            tcpSocket:
                                              description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                    livenessProbe:
                                      description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      type: object
                                      properties:
                                        exec:
                                          description: One and only one of the following should be specified. Exec specifies the action to take.
                                          type: object
                                          properties:
                                            command:
                                              description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                          format: int32
                                        httpGet:
                                          description: HTTPGet specifies the http request to perform.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                          format: int32
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                          format: int32
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                          format: int32
                                        tcpSocket:
                                          description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          type: integer
                                          format: int64
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                          format: int32
                                    name:
                                      description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                                      type: string
                                    ports:
                                      description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
                                      type: array
                                      items:
                                        description: ContainerPort represents a network port in a single container.
                                        type: object
                                        required:
                                          - containerPort
                                        properties:
                                          containerPort:
                                            description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                            type: integer
                                            format: int32
                                          hostIP:
                                            description: What host IP to bind the external port to.
                                            type: string
                                          hostPort:
                                            description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                            type: integer
                                            format: int32
                                          name:
                                            description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                            type: string
                                          protocol:
                                            description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                            type: string
                                      x-kubernetes-list-map-keys:
                                        - containerPort
                                        - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      type: object
                                      properties:
                                        exec:
                                          description: One and only one of the following should be specified. Exec specifies the action to take.
                                          type: object
                                          properties:
                                            command:
                                              description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                          format: int32
                                        httpGet:
                                          description: HTTPGet specifies the http request to perform.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                          format: int32
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                          format: int32
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                          format: int32
                                        tcpSocket:
                                          description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          type: integer
                                          format: int64
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                          format: int32
                                    resources:
                                      description: 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                      properties:
                                        limits:
                                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                          additionalProperties:
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                        requests:
                                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                          additionalProperties:
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                    securityContext:
                                      description: 'SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                      type: object
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                                          type: boolean
                                        capabilities:
                                          description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                                          type: object
                                          properties:
                                            add:
                                              description: Added capabilities
                                              type: array
                                              items:
                                                description: Capability represent POSIX capabilities type
                                                type: string
                                            drop:
                                              description: Removed capabilities
                                              type: array
                                              items:
                                                description: Capability represent POSIX capabilities type
                                                type: string
                                        privileged:
                                          description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                                          type: boolean
                                        procMount:
                                          description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                                          type: string
                                        readOnlyRootFilesystem:
                                          description: Whether this container has a read-only root filesystem. Default is false.
                                          type: boolean
                                        runAsGroup:
                                          description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: integer
                                          format: int64
                                        runAsNonRoot:
                                          description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: integer
                                          format: int64
                                        seLinuxOptions:
                                          description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: object
                                          properties:
                                            level:
                                              description: Level is SELinux level label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user label that applies to the container.
                                              type: string
                                        seccompProfile:
                                          description: The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
                                          type: object
                                          required:
                                            - type
                                          properties:
                                            localhostProfile:
                                              description: localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied. Valid options are: 
                                                 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                              type: string
                                        windowsOptions:
                                          description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: object
                                          properties:
                                            gmsaCredentialSpec:
                                              description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                              type: string
                                            gmsaCredentialSpecName:
                                              description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                              type: string
                                            hostProcess:
                                              description: HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                                              type: boolean
                                            runAsUserName:
                                              description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              type: string
                                    startupProbe:
                                      description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod''s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      type: object
                                      properties:
                                        exec:
                                          description: One and only one of the following should be specified. Exec specifies the action to take.
                                          type: object
                                          properties:
                                            command:
                                              description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              type: array
                                              items:
                                                type: string
                                        failureThreshold:
                                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                          type: integer
                                          format: int32
                                        httpGet:
                                          description: HTTPGet specifies the http request to perform.
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              type: array
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    description: The header field name
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                                              type: string
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                          format: int32
                                        periodSeconds:
                                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                          type: integer
                                          format: int32
                                        successThreshold:
                                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                          type: integer
                                          format: int32
                                        tcpSocket:
                                          description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                          type: integer
                                          format: int64
                                        timeoutSeconds:
                                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          type: integer
                                          format: int32
                                    stdin:
                                      description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                                      type: boolean
                                    stdinOnce:
                                      description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                                      type: boolean
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                                      type: string
                                    tty:
                                      description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                                      type: boolean
                                    volumeDevices:
                                      description: volumeDevices is the list of block devices to be used by the container.
                                      type: array
                                      items:
                                        description: volumeDevice describes a mapping of a raw block device within a container.
                                        type: object
                                        required:
                                          - devicePath
                                          - name
                                        properties:
                                          devicePath:
                                            description: devicePath is the path inside of the container that the device will be mapped to.
                                            type: string
                                          name:
                                            description: name must match the name of a persistentVolumeClaim in the pod
                                            type: string
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                                      type: array
                                      items:
                                        description: VolumeMount describes a mounting of a Volume within a container.
                                        type: object
                                        required:
                                          - mountPath
                                          - name
                                        properties:
                                          mountPath:
                                            description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                            type: string
                                          mountPropagation:
                                            description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                            type: string
                                          name:
                                            description: This must match the Name of a Volume.
                                            type: string
                                          readOnly:
                                            description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                            type: string
                                          subPathExpr:
                                            description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                            type: string
                                    workingDir:
                                      description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                                      type: string
                              timeout:
                                description: Timeout defines the maximum amount of time Velero should wait for the initContainers to complete.
                                type: string
          includeClusterResource:
            description: IncludeClusterResource is a flag for considering cluster wider resource during restore
            type: boolean
          includeNamespaces:
            description: IncludeNamespaces are set of namespaces name considered for restore
            type: array
            items:
              type: string
          includeResources:
            description: IncludeResources are set of kubernetes resource name considered for restore
            type: array
            items:
              type: object
              required:
                - kind
              properties:
                isRegex:
                  description: IsRegex indicates if Name is regular expression
                  type: boolean
                kind:
                  description: Kind of the resource
                  type: string
                name:
                  description: Name of the resource The name can have empty, * in regular expression or valid resource name
                  type: string
          labelSelector:
            description: LabelSelector are label get evaluated against resource selection
            type: object
            properties:
              matchExpressions:
                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                type: array
                items:
                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                  type: object
                  required:
                    - key
                    - operator
                  properties:
                    key:
                      description: key is the label key that the selector applies to.
                      type: string
                    operator:
                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                      type: string
                    values:
                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                      type: array
                      items:
                        type: string
              matchLabels:
                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                type: object
                additionalProperties:
                  type: string
          namespaceMapping:
            description: NamespaceMapping is mapping between backed up namespace name against restore namespace name
            type: object
            additionalProperties:
              type: string
          preserveClusterIpAddr:
            description: PreserveClusterIpAddr enable to preserve cluster IP addresses during restore Default behavior is to use assign fresh cluster ip addr when it is not "None"
            type: boolean
          preserveNodePort:
            description: PreserveNodePort enable to preserve service node port during restore Default behavior is to use assign fresh node port
            type: boolean
          resourcePrefix:
            description: ResourcePrefix gets prepended in each restored resource name
            type: string
      status:
        description: RestoreStatus defines the observed state of Restore
        type: object
        properties:
          completionTimestamp:
            format: date-time
          failureReason:
            type: string
          progress:
            description: RestoreProgress expresses overall progress of restore
            type: object
            properties:
              itemsRestored:
                description: ItemsRestored is count of resource got processed
                type: integer
              totalItems:
                description: TotalItems is count of resource to be process
                type: integer
          resources:
            description: Resources tells the resources that is restored
            type: array
            items:
              description: RestoreResource indicates the resources getting restored
              type: object
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                namespace:
                  description: Namespace of the backup resource
                  type: string
                resourceName:
                  description: ResourceName is a one of the item of backup that is backing up
                  type: string
          stage:
            type: string
            enum:
              - Initial
              - PreHook
              - Resources
              - Volumes
              - PostHook
              - Finished
          startTimestamp:
            format: date-time
          state:
            type: string
            enum:
              - New
              - Validating
              - Failed
              - Processing
              - Completed
              - Deleting
          validationErrors:
            description: ValidationErrors is a slice of validation errors during restore
    x-kubernetes-group-version-kind:
      - group: kahu.io
        kind: Restore
        version: v1beta1
  io.kahu.v1beta1.RestoreList:
    description: RestoreList is a list of Restore
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of restores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.kahu.v1beta1.Restore'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: kahu.io
        kind: RestoreList
        version: v1beta1
securityDefinitions:
  BearerToken:
    description: Bearer Token authentication
    type: apiKey
    name: authorization
    in: header
security:
  - BearerToken: []
