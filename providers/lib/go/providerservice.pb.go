// Copyright 2022 The SODA Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.9.1
// source: proto/providerservice.proto

package providerservice

import (
	context "context"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetProviderCapabilitiesResponse_Service_Type int32

const (
	GetProviderCapabilitiesResponse_Service_UNKNOWN               GetProviderCapabilitiesResponse_Service_Type = 0
	GetProviderCapabilitiesResponse_Service_META_BACKUP_SERVICE   GetProviderCapabilitiesResponse_Service_Type = 1
	GetProviderCapabilitiesResponse_Service_VOLUME_BACKUP_SERVICE GetProviderCapabilitiesResponse_Service_Type = 2
)

// Enum value maps for GetProviderCapabilitiesResponse_Service_Type.
var (
	GetProviderCapabilitiesResponse_Service_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "META_BACKUP_SERVICE",
		2: "VOLUME_BACKUP_SERVICE",
	}
	GetProviderCapabilitiesResponse_Service_Type_value = map[string]int32{
		"UNKNOWN":               0,
		"META_BACKUP_SERVICE":   1,
		"VOLUME_BACKUP_SERVICE": 2,
	}
)

func (x GetProviderCapabilitiesResponse_Service_Type) Enum() *GetProviderCapabilitiesResponse_Service_Type {
	p := new(GetProviderCapabilitiesResponse_Service_Type)
	*p = x
	return p
}

func (x GetProviderCapabilitiesResponse_Service_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetProviderCapabilitiesResponse_Service_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_providerservice_proto_enumTypes[0].Descriptor()
}

func (GetProviderCapabilitiesResponse_Service_Type) Type() protoreflect.EnumType {
	return &file_proto_providerservice_proto_enumTypes[0]
}

func (x GetProviderCapabilitiesResponse_Service_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetProviderCapabilitiesResponse_Service_Type.Descriptor instead.
func (GetProviderCapabilitiesResponse_Service_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{3, 0, 0}
}

type GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type int32

const (
	GetProviderCapabilitiesResponse_MetaBackupServiceSupport_UNKNOWN       GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type = 0
	GetProviderCapabilitiesResponse_MetaBackupServiceSupport_NEED_SNAPSHOT GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type = 1
)

// Enum value maps for GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type.
var (
	GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "NEED_SNAPSHOT",
	}
	GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type_value = map[string]int32{
		"UNKNOWN":       0,
		"NEED_SNAPSHOT": 1,
	}
)

func (x GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type) Enum() *GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type {
	p := new(GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type)
	*p = x
	return p
}

func (x GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_providerservice_proto_enumTypes[1].Descriptor()
}

func (GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type) Type() protoreflect.EnumType {
	return &file_proto_providerservice_proto_enumTypes[1]
}

func (x GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type.Descriptor instead.
func (GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{3, 1, 0}
}

type GetProviderInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProviderInfoRequest) Reset() {
	*x = GetProviderInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderInfoRequest) ProtoMessage() {}

func (x *GetProviderInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderInfoRequest.ProtoReflect.Descriptor instead.
func (*GetProviderInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{0}
}

type GetProviderInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string            `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Version  string            `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Manifest map[string]string `protobuf:"bytes,3,rep,name=manifest,proto3" json:"manifest,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetProviderInfoResponse) Reset() {
	*x = GetProviderInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderInfoResponse) ProtoMessage() {}

func (x *GetProviderInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderInfoResponse.ProtoReflect.Descriptor instead.
func (*GetProviderInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetProviderInfoResponse) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *GetProviderInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetProviderInfoResponse) GetManifest() map[string]string {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type GetProviderCapabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProviderCapabilitiesRequest) Reset() {
	*x = GetProviderCapabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderCapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderCapabilitiesRequest) ProtoMessage() {}

func (x *GetProviderCapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderCapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetProviderCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{2}
}

type GetProviderCapabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*GetProviderCapabilitiesResponse_Service_
	//	*GetProviderCapabilitiesResponse_MetaBackupService
	Data isGetProviderCapabilitiesResponse_Data `protobuf_oneof:"Data"`
}

func (x *GetProviderCapabilitiesResponse) Reset() {
	*x = GetProviderCapabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderCapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderCapabilitiesResponse) ProtoMessage() {}

func (x *GetProviderCapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderCapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetProviderCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{3}
}

func (m *GetProviderCapabilitiesResponse) GetData() isGetProviderCapabilitiesResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *GetProviderCapabilitiesResponse) GetService() *GetProviderCapabilitiesResponse_Service {
	if x, ok := x.GetData().(*GetProviderCapabilitiesResponse_Service_); ok {
		return x.Service
	}
	return nil
}

func (x *GetProviderCapabilitiesResponse) GetMetaBackupService() *GetProviderCapabilitiesResponse_MetaBackupServiceSupport {
	if x, ok := x.GetData().(*GetProviderCapabilitiesResponse_MetaBackupService); ok {
		return x.MetaBackupService
	}
	return nil
}

type isGetProviderCapabilitiesResponse_Data interface {
	isGetProviderCapabilitiesResponse_Data()
}

type GetProviderCapabilitiesResponse_Service_ struct {
	Service *GetProviderCapabilitiesResponse_Service `protobuf:"bytes,1,opt,name=service,proto3,oneof"`
}

type GetProviderCapabilitiesResponse_MetaBackupService struct {
	MetaBackupService *GetProviderCapabilitiesResponse_MetaBackupServiceSupport `protobuf:"bytes,2,opt,name=meta_backup_service,json=metaBackupService,proto3,oneof"`
}

func (*GetProviderCapabilitiesResponse_Service_) isGetProviderCapabilitiesResponse_Data() {}

func (*GetProviderCapabilitiesResponse_MetaBackupService) isGetProviderCapabilitiesResponse_Data() {}

type ProbeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProbeRequest) Reset() {
	*x = ProbeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeRequest) ProtoMessage() {}

func (x *ProbeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeRequest.ProtoReflect.Descriptor instead.
func (*ProbeRequest) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{4}
}

type ProbeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready *wrappers.BoolValue `protobuf:"bytes,1,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *ProbeResponse) Reset() {
	*x = ProbeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeResponse) ProtoMessage() {}

func (x *ProbeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeResponse.ProtoReflect.Descriptor instead.
func (*ProbeResponse) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{5}
}

func (x *ProbeResponse) GetReady() *wrappers.BoolValue {
	if x != nil {
		return x.Ready
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{6}
}

type UploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*UploadRequest_Info
	//	*UploadRequest_ChunkData
	Data isUploadRequest_Data `protobuf_oneof:"Data"`
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{7}
}

func (m *UploadRequest) GetData() isUploadRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UploadRequest) GetInfo() *UploadRequest_FileInfo {
	if x, ok := x.GetData().(*UploadRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (x *UploadRequest) GetChunkData() []byte {
	if x, ok := x.GetData().(*UploadRequest_ChunkData); ok {
		return x.ChunkData
	}
	return nil
}

type isUploadRequest_Data interface {
	isUploadRequest_Data()
}

type UploadRequest_Info struct {
	Info *UploadRequest_FileInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type UploadRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*UploadRequest_Info) isUploadRequest_Data() {}

func (*UploadRequest_ChunkData) isUploadRequest_Data() {}

type ObjectExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIdentifier string            `protobuf:"bytes,1,opt,name=file_identifier,json=fileIdentifier,proto3" json:"file_identifier,omitempty"`
	Attributes     map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ObjectExistsRequest) Reset() {
	*x = ObjectExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectExistsRequest) ProtoMessage() {}

func (x *ObjectExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectExistsRequest.ProtoReflect.Descriptor instead.
func (*ObjectExistsRequest) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{8}
}

func (x *ObjectExistsRequest) GetFileIdentifier() string {
	if x != nil {
		return x.FileIdentifier
	}
	return ""
}

func (x *ObjectExistsRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type ObjectExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ObjectExistsResponse) Reset() {
	*x = ObjectExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectExistsResponse) ProtoMessage() {}

func (x *ObjectExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectExistsResponse.ProtoReflect.Descriptor instead.
func (*ObjectExistsResponse) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{9}
}

func (x *ObjectExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIdentifier string            `protobuf:"bytes,1,opt,name=file_identifier,json=fileIdentifier,proto3" json:"file_identifier,omitempty"`
	Attributes     map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{10}
}

func (x *DownloadRequest) GetFileIdentifier() string {
	if x != nil {
		return x.FileIdentifier
	}
	return ""
}

func (x *DownloadRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type DownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*DownloadResponse_Info
	//	*DownloadResponse_ChunkData
	Data isDownloadResponse_Data `protobuf_oneof:"Data"`
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{11}
}

func (m *DownloadResponse) GetData() isDownloadResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *DownloadResponse) GetInfo() *DownloadResponse_FileInfo {
	if x, ok := x.GetData().(*DownloadResponse_Info); ok {
		return x.Info
	}
	return nil
}

func (x *DownloadResponse) GetChunkData() []byte {
	if x, ok := x.GetData().(*DownloadResponse_ChunkData); ok {
		return x.ChunkData
	}
	return nil
}

type isDownloadResponse_Data interface {
	isDownloadResponse_Data()
}

type DownloadResponse_Info struct {
	Info *DownloadResponse_FileInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type DownloadResponse_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*DownloadResponse_Info) isDownloadResponse_Data() {}

func (*DownloadResponse_ChunkData) isDownloadResponse_Data() {}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIdentifier string            `protobuf:"bytes,1,opt,name=file_identifier,json=fileIdentifier,proto3" json:"file_identifier,omitempty"`
	Attributes     map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRequest) GetFileIdentifier() string {
	if x != nil {
		return x.FileIdentifier
	}
	return ""
}

func (x *DeleteRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type GetProviderCapabilitiesResponse_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type GetProviderCapabilitiesResponse_Service_Type `protobuf:"varint,1,opt,name=type,proto3,enum=kahu.providerservice.GetProviderCapabilitiesResponse_Service_Type" json:"type,omitempty"`
}

func (x *GetProviderCapabilitiesResponse_Service) Reset() {
	*x = GetProviderCapabilitiesResponse_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderCapabilitiesResponse_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderCapabilitiesResponse_Service) ProtoMessage() {}

func (x *GetProviderCapabilitiesResponse_Service) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderCapabilitiesResponse_Service.ProtoReflect.Descriptor instead.
func (*GetProviderCapabilitiesResponse_Service) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetProviderCapabilitiesResponse_Service) GetType() GetProviderCapabilitiesResponse_Service_Type {
	if x != nil {
		return x.Type
	}
	return GetProviderCapabilitiesResponse_Service_UNKNOWN
}

type GetProviderCapabilitiesResponse_MetaBackupServiceSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type `protobuf:"varint,1,opt,name=type,proto3,enum=kahu.providerservice.GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type" json:"type,omitempty"`
}

func (x *GetProviderCapabilitiesResponse_MetaBackupServiceSupport) Reset() {
	*x = GetProviderCapabilitiesResponse_MetaBackupServiceSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderCapabilitiesResponse_MetaBackupServiceSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderCapabilitiesResponse_MetaBackupServiceSupport) ProtoMessage() {}

func (x *GetProviderCapabilitiesResponse_MetaBackupServiceSupport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderCapabilitiesResponse_MetaBackupServiceSupport.ProtoReflect.Descriptor instead.
func (*GetProviderCapabilitiesResponse_MetaBackupServiceSupport) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetProviderCapabilitiesResponse_MetaBackupServiceSupport) GetType() GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type {
	if x != nil {
		return x.Type
	}
	return GetProviderCapabilitiesResponse_MetaBackupServiceSupport_UNKNOWN
}

type UploadRequest_FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIdentifier string            `protobuf:"bytes,1,opt,name=file_identifier,json=fileIdentifier,proto3" json:"file_identifier,omitempty"`
	Attributes     map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UploadRequest_FileInfo) Reset() {
	*x = UploadRequest_FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadRequest_FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest_FileInfo) ProtoMessage() {}

func (x *UploadRequest_FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest_FileInfo.ProtoReflect.Descriptor instead.
func (*UploadRequest_FileInfo) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{7, 0}
}

func (x *UploadRequest_FileInfo) GetFileIdentifier() string {
	if x != nil {
		return x.FileIdentifier
	}
	return ""
}

func (x *UploadRequest_FileInfo) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type DownloadResponse_FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIdentifier string            `protobuf:"bytes,1,opt,name=file_identifier,json=fileIdentifier,proto3" json:"file_identifier,omitempty"`
	Attributes     map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DownloadResponse_FileInfo) Reset() {
	*x = DownloadResponse_FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_providerservice_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResponse_FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse_FileInfo) ProtoMessage() {}

func (x *DownloadResponse_FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_providerservice_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse_FileInfo.ProtoReflect.Descriptor instead.
func (*DownloadResponse_FileInfo) Descriptor() ([]byte, []int) {
	return file_proto_providerservice_proto_rawDescGZIP(), []int{11, 0}
}

func (x *DownloadResponse_FileInfo) GetFileIdentifier() string {
	if x != nil {
		return x.FileIdentifier
	}
	return ""
}

func (x *DownloadResponse_FileInfo) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

var File_proto_providerservice_proto protoreflect.FileDescriptor

var file_proto_providerservice_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6b,
	0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe5, 0x01,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x57, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe2, 0x04, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6b,
	0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x6d, 0x65, 0x74, 0x61, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0xaa, 0x01, 0x0a, 0x07, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x54, 0x41, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55,
	0x50, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x56,
	0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x10, 0x02, 0x1a, 0xab, 0x01, 0x0a, 0x18, 0x4d, 0x65, 0x74, 0x61, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x67, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x53, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x26, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48,
	0x4f, 0x54, 0x10, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x0e, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xcf, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0xd0, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x5c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6b, 0x61, 0x68, 0x75,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd8, 0x01, 0x0a, 0x13, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x14, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x55, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8, 0x02, 0x0a, 0x10, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x61,
	0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xd3, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xcc, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x53,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0xdb, 0x02, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x70, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2c, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x88, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x34, 0x2e,
	0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x05,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x22, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6b, 0x61, 0x68, 0x75,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x32, 0xf2, 0x02, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12,
	0x4e, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x23, 0x2e, 0x6b, 0x61, 0x68, 0x75,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12,
	0x67, 0x0a, 0x0c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x29, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6b, 0x61, 0x68,
	0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x25, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6b, 0x61,
	0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x23, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6b, 0x61, 0x68, 0x75, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x3b,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_providerservice_proto_rawDescOnce sync.Once
	file_proto_providerservice_proto_rawDescData = file_proto_providerservice_proto_rawDesc
)

func file_proto_providerservice_proto_rawDescGZIP() []byte {
	file_proto_providerservice_proto_rawDescOnce.Do(func() {
		file_proto_providerservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_providerservice_proto_rawDescData)
	})
	return file_proto_providerservice_proto_rawDescData
}

var file_proto_providerservice_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_providerservice_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_providerservice_proto_goTypes = []interface{}{
	(GetProviderCapabilitiesResponse_Service_Type)(0),                  // 0: kahu.providerservice.GetProviderCapabilitiesResponse.Service.Type
	(GetProviderCapabilitiesResponse_MetaBackupServiceSupport_Type)(0), // 1: kahu.providerservice.GetProviderCapabilitiesResponse.MetaBackupServiceSupport.Type
	(*GetProviderInfoRequest)(nil),                                     // 2: kahu.providerservice.GetProviderInfoRequest
	(*GetProviderInfoResponse)(nil),                                    // 3: kahu.providerservice.GetProviderInfoResponse
	(*GetProviderCapabilitiesRequest)(nil),                             // 4: kahu.providerservice.GetProviderCapabilitiesRequest
	(*GetProviderCapabilitiesResponse)(nil),                            // 5: kahu.providerservice.GetProviderCapabilitiesResponse
	(*ProbeRequest)(nil),                                               // 6: kahu.providerservice.ProbeRequest
	(*ProbeResponse)(nil),                                              // 7: kahu.providerservice.ProbeResponse
	(*Empty)(nil),                                                      // 8: kahu.providerservice.Empty
	(*UploadRequest)(nil),                                              // 9: kahu.providerservice.UploadRequest
	(*ObjectExistsRequest)(nil),                                        // 10: kahu.providerservice.ObjectExistsRequest
	(*ObjectExistsResponse)(nil),                                       // 11: kahu.providerservice.ObjectExistsResponse
	(*DownloadRequest)(nil),                                            // 12: kahu.providerservice.DownloadRequest
	(*DownloadResponse)(nil),                                           // 13: kahu.providerservice.DownloadResponse
	(*DeleteRequest)(nil),                                              // 14: kahu.providerservice.DeleteRequest
	nil,                                                                // 15: kahu.providerservice.GetProviderInfoResponse.ManifestEntry
	(*GetProviderCapabilitiesResponse_Service)(nil),                    // 16: kahu.providerservice.GetProviderCapabilitiesResponse.Service
	(*GetProviderCapabilitiesResponse_MetaBackupServiceSupport)(nil), // 17: kahu.providerservice.GetProviderCapabilitiesResponse.MetaBackupServiceSupport
	(*UploadRequest_FileInfo)(nil),                                   // 18: kahu.providerservice.UploadRequest.FileInfo
	nil,                                                              // 19: kahu.providerservice.UploadRequest.FileInfo.AttributesEntry
	nil,                                                              // 20: kahu.providerservice.ObjectExistsRequest.AttributesEntry
	nil,                                                              // 21: kahu.providerservice.DownloadRequest.AttributesEntry
	(*DownloadResponse_FileInfo)(nil),                                // 22: kahu.providerservice.DownloadResponse.FileInfo
	nil,                                                              // 23: kahu.providerservice.DownloadResponse.FileInfo.AttributesEntry
	nil,                                                              // 24: kahu.providerservice.DeleteRequest.AttributesEntry
	(*wrappers.BoolValue)(nil),                                       // 25: google.protobuf.BoolValue
}
var file_proto_providerservice_proto_depIdxs = []int32{
	15, // 0: kahu.providerservice.GetProviderInfoResponse.manifest:type_name -> kahu.providerservice.GetProviderInfoResponse.ManifestEntry
	16, // 1: kahu.providerservice.GetProviderCapabilitiesResponse.service:type_name -> kahu.providerservice.GetProviderCapabilitiesResponse.Service
	17, // 2: kahu.providerservice.GetProviderCapabilitiesResponse.meta_backup_service:type_name -> kahu.providerservice.GetProviderCapabilitiesResponse.MetaBackupServiceSupport
	25, // 3: kahu.providerservice.ProbeResponse.ready:type_name -> google.protobuf.BoolValue
	18, // 4: kahu.providerservice.UploadRequest.info:type_name -> kahu.providerservice.UploadRequest.FileInfo
	20, // 5: kahu.providerservice.ObjectExistsRequest.attributes:type_name -> kahu.providerservice.ObjectExistsRequest.AttributesEntry
	21, // 6: kahu.providerservice.DownloadRequest.attributes:type_name -> kahu.providerservice.DownloadRequest.AttributesEntry
	22, // 7: kahu.providerservice.DownloadResponse.info:type_name -> kahu.providerservice.DownloadResponse.FileInfo
	24, // 8: kahu.providerservice.DeleteRequest.attributes:type_name -> kahu.providerservice.DeleteRequest.AttributesEntry
	0,  // 9: kahu.providerservice.GetProviderCapabilitiesResponse.Service.type:type_name -> kahu.providerservice.GetProviderCapabilitiesResponse.Service.Type
	1,  // 10: kahu.providerservice.GetProviderCapabilitiesResponse.MetaBackupServiceSupport.type:type_name -> kahu.providerservice.GetProviderCapabilitiesResponse.MetaBackupServiceSupport.Type
	19, // 11: kahu.providerservice.UploadRequest.FileInfo.attributes:type_name -> kahu.providerservice.UploadRequest.FileInfo.AttributesEntry
	23, // 12: kahu.providerservice.DownloadResponse.FileInfo.attributes:type_name -> kahu.providerservice.DownloadResponse.FileInfo.AttributesEntry
	2,  // 13: kahu.providerservice.Identity.GetProviderInfo:input_type -> kahu.providerservice.GetProviderInfoRequest
	4,  // 14: kahu.providerservice.Identity.GetProviderCapabilities:input_type -> kahu.providerservice.GetProviderCapabilitiesRequest
	6,  // 15: kahu.providerservice.Identity.Probe:input_type -> kahu.providerservice.ProbeRequest
	9,  // 16: kahu.providerservice.MetaBackup.Upload:input_type -> kahu.providerservice.UploadRequest
	10, // 17: kahu.providerservice.MetaBackup.ObjectExists:input_type -> kahu.providerservice.ObjectExistsRequest
	12, // 18: kahu.providerservice.MetaBackup.Download:input_type -> kahu.providerservice.DownloadRequest
	14, // 19: kahu.providerservice.MetaBackup.Delete:input_type -> kahu.providerservice.DeleteRequest
	3,  // 20: kahu.providerservice.Identity.GetProviderInfo:output_type -> kahu.providerservice.GetProviderInfoResponse
	5,  // 21: kahu.providerservice.Identity.GetProviderCapabilities:output_type -> kahu.providerservice.GetProviderCapabilitiesResponse
	7,  // 22: kahu.providerservice.Identity.Probe:output_type -> kahu.providerservice.ProbeResponse
	8,  // 23: kahu.providerservice.MetaBackup.Upload:output_type -> kahu.providerservice.Empty
	11, // 24: kahu.providerservice.MetaBackup.ObjectExists:output_type -> kahu.providerservice.ObjectExistsResponse
	13, // 25: kahu.providerservice.MetaBackup.Download:output_type -> kahu.providerservice.DownloadResponse
	8,  // 26: kahu.providerservice.MetaBackup.Delete:output_type -> kahu.providerservice.Empty
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_providerservice_proto_init() }
func file_proto_providerservice_proto_init() {
	if File_proto_providerservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_providerservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderCapabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderCapabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderCapabilitiesResponse_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderCapabilitiesResponse_MetaBackupServiceSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadRequest_FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_providerservice_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadResponse_FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_providerservice_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GetProviderCapabilitiesResponse_Service_)(nil),
		(*GetProviderCapabilitiesResponse_MetaBackupService)(nil),
	}
	file_proto_providerservice_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*UploadRequest_Info)(nil),
		(*UploadRequest_ChunkData)(nil),
	}
	file_proto_providerservice_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*DownloadResponse_Info)(nil),
		(*DownloadResponse_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_providerservice_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_providerservice_proto_goTypes,
		DependencyIndexes: file_proto_providerservice_proto_depIdxs,
		EnumInfos:         file_proto_providerservice_proto_enumTypes,
		MessageInfos:      file_proto_providerservice_proto_msgTypes,
	}.Build()
	File_proto_providerservice_proto = out.File
	file_proto_providerservice_proto_rawDesc = nil
	file_proto_providerservice_proto_goTypes = nil
	file_proto_providerservice_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IdentityClient is the client API for Identity service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdentityClient interface {
	GetProviderInfo(ctx context.Context, in *GetProviderInfoRequest, opts ...grpc.CallOption) (*GetProviderInfoResponse, error)
	GetProviderCapabilities(ctx context.Context, in *GetProviderCapabilitiesRequest, opts ...grpc.CallOption) (*GetProviderCapabilitiesResponse, error)
	Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error)
}

type identityClient struct {
	cc grpc.ClientConnInterface
}

func NewIdentityClient(cc grpc.ClientConnInterface) IdentityClient {
	return &identityClient{cc}
}

func (c *identityClient) GetProviderInfo(ctx context.Context, in *GetProviderInfoRequest, opts ...grpc.CallOption) (*GetProviderInfoResponse, error) {
	out := new(GetProviderInfoResponse)
	err := c.cc.Invoke(ctx, "/kahu.providerservice.Identity/GetProviderInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identityClient) GetProviderCapabilities(ctx context.Context, in *GetProviderCapabilitiesRequest, opts ...grpc.CallOption) (*GetProviderCapabilitiesResponse, error) {
	out := new(GetProviderCapabilitiesResponse)
	err := c.cc.Invoke(ctx, "/kahu.providerservice.Identity/GetProviderCapabilities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identityClient) Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error) {
	out := new(ProbeResponse)
	err := c.cc.Invoke(ctx, "/kahu.providerservice.Identity/Probe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdentityServer is the server API for Identity service.
type IdentityServer interface {
	GetProviderInfo(context.Context, *GetProviderInfoRequest) (*GetProviderInfoResponse, error)
	GetProviderCapabilities(context.Context, *GetProviderCapabilitiesRequest) (*GetProviderCapabilitiesResponse, error)
	Probe(context.Context, *ProbeRequest) (*ProbeResponse, error)
}

// UnimplementedIdentityServer can be embedded to have forward compatible implementations.
type UnimplementedIdentityServer struct {
}

func (*UnimplementedIdentityServer) GetProviderInfo(context.Context, *GetProviderInfoRequest) (*GetProviderInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProviderInfo not implemented")
}
func (*UnimplementedIdentityServer) GetProviderCapabilities(context.Context, *GetProviderCapabilitiesRequest) (*GetProviderCapabilitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProviderCapabilities not implemented")
}
func (*UnimplementedIdentityServer) Probe(context.Context, *ProbeRequest) (*ProbeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Probe not implemented")
}

func RegisterIdentityServer(s *grpc.Server, srv IdentityServer) {
	s.RegisterService(&_Identity_serviceDesc, srv)
}

func _Identity_GetProviderInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProviderInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).GetProviderInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kahu.providerservice.Identity/GetProviderInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).GetProviderInfo(ctx, req.(*GetProviderInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identity_GetProviderCapabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProviderCapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).GetProviderCapabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kahu.providerservice.Identity/GetProviderCapabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).GetProviderCapabilities(ctx, req.(*GetProviderCapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identity_Probe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).Probe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kahu.providerservice.Identity/Probe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).Probe(ctx, req.(*ProbeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Identity_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kahu.providerservice.Identity",
	HandlerType: (*IdentityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProviderInfo",
			Handler:    _Identity_GetProviderInfo_Handler,
		},
		{
			MethodName: "GetProviderCapabilities",
			Handler:    _Identity_GetProviderCapabilities_Handler,
		},
		{
			MethodName: "Probe",
			Handler:    _Identity_Probe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/providerservice.proto",
}

// MetaBackupClient is the client API for MetaBackup service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetaBackupClient interface {
	Upload(ctx context.Context, opts ...grpc.CallOption) (MetaBackup_UploadClient, error)
	ObjectExists(ctx context.Context, in *ObjectExistsRequest, opts ...grpc.CallOption) (*ObjectExistsResponse, error)
	Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (MetaBackup_DownloadClient, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error)
}

type metaBackupClient struct {
	cc grpc.ClientConnInterface
}

func NewMetaBackupClient(cc grpc.ClientConnInterface) MetaBackupClient {
	return &metaBackupClient{cc}
}

func (c *metaBackupClient) Upload(ctx context.Context, opts ...grpc.CallOption) (MetaBackup_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MetaBackup_serviceDesc.Streams[0], "/kahu.providerservice.MetaBackup/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &metaBackupUploadClient{stream}
	return x, nil
}

type MetaBackup_UploadClient interface {
	Send(*UploadRequest) error
	CloseAndRecv() (*Empty, error)
	grpc.ClientStream
}

type metaBackupUploadClient struct {
	grpc.ClientStream
}

func (x *metaBackupUploadClient) Send(m *UploadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *metaBackupUploadClient) CloseAndRecv() (*Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *metaBackupClient) ObjectExists(ctx context.Context, in *ObjectExistsRequest, opts ...grpc.CallOption) (*ObjectExistsResponse, error) {
	out := new(ObjectExistsResponse)
	err := c.cc.Invoke(ctx, "/kahu.providerservice.MetaBackup/ObjectExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaBackupClient) Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (MetaBackup_DownloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MetaBackup_serviceDesc.Streams[1], "/kahu.providerservice.MetaBackup/Download", opts...)
	if err != nil {
		return nil, err
	}
	x := &metaBackupDownloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MetaBackup_DownloadClient interface {
	Recv() (*DownloadResponse, error)
	grpc.ClientStream
}

type metaBackupDownloadClient struct {
	grpc.ClientStream
}

func (x *metaBackupDownloadClient) Recv() (*DownloadResponse, error) {
	m := new(DownloadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *metaBackupClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/kahu.providerservice.MetaBackup/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetaBackupServer is the server API for MetaBackup service.
type MetaBackupServer interface {
	Upload(MetaBackup_UploadServer) error
	ObjectExists(context.Context, *ObjectExistsRequest) (*ObjectExistsResponse, error)
	Download(*DownloadRequest, MetaBackup_DownloadServer) error
	Delete(context.Context, *DeleteRequest) (*Empty, error)
}

// UnimplementedMetaBackupServer can be embedded to have forward compatible implementations.
type UnimplementedMetaBackupServer struct {
}

func (*UnimplementedMetaBackupServer) Upload(MetaBackup_UploadServer) error {
	return status.Errorf(codes.Unimplemented, "method Upload not implemented")
}
func (*UnimplementedMetaBackupServer) ObjectExists(context.Context, *ObjectExistsRequest) (*ObjectExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ObjectExists not implemented")
}
func (*UnimplementedMetaBackupServer) Download(*DownloadRequest, MetaBackup_DownloadServer) error {
	return status.Errorf(codes.Unimplemented, "method Download not implemented")
}
func (*UnimplementedMetaBackupServer) Delete(context.Context, *DeleteRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterMetaBackupServer(s *grpc.Server, srv MetaBackupServer) {
	s.RegisterService(&_MetaBackup_serviceDesc, srv)
}

func _MetaBackup_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MetaBackupServer).Upload(&metaBackupUploadServer{stream})
}

type MetaBackup_UploadServer interface {
	SendAndClose(*Empty) error
	Recv() (*UploadRequest, error)
	grpc.ServerStream
}

type metaBackupUploadServer struct {
	grpc.ServerStream
}

func (x *metaBackupUploadServer) SendAndClose(m *Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *metaBackupUploadServer) Recv() (*UploadRequest, error) {
	m := new(UploadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MetaBackup_ObjectExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaBackupServer).ObjectExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kahu.providerservice.MetaBackup/ObjectExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaBackupServer).ObjectExists(ctx, req.(*ObjectExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaBackup_Download_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MetaBackupServer).Download(m, &metaBackupDownloadServer{stream})
}

type MetaBackup_DownloadServer interface {
	Send(*DownloadResponse) error
	grpc.ServerStream
}

type metaBackupDownloadServer struct {
	grpc.ServerStream
}

func (x *metaBackupDownloadServer) Send(m *DownloadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MetaBackup_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaBackupServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kahu.providerservice.MetaBackup/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaBackupServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetaBackup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kahu.providerservice.MetaBackup",
	HandlerType: (*MetaBackupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ObjectExists",
			Handler:    _MetaBackup_ObjectExists_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _MetaBackup_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _MetaBackup_Upload_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Download",
			Handler:       _MetaBackup_Download_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/providerservice.proto",
}
